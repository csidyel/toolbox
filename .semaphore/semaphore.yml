version: v1.0
name: Toolbox S2 project
agent:
  machine:
    type: f1-standard-2
    os_image: ubuntu2004
blocks:
  - name: Build local CLIs
    dependencies: []
    task:
      jobs:
        - name: Build cache CLI
          commands:
            - sem-version go 1.22
            - export GOPATH=~/go
            - 'export PATH=/home/semaphore/go/bin:$PATH'
            - checkout
            - cd cache-cli
            - make build.linux ARCH=amd64
            - make build.linux ARCH=arm64
            - make build.darwin ARCH=amd64
            - make build.darwin ARCH=arm64
            - make build.windows
            - artifact push workflow bin/linux/amd64/cache -d bin/linux/amd64/cache
            - artifact push workflow bin/linux/arm64/cache -d bin/linux/arm64/cache
            - artifact push workflow bin/darwin/amd64/cache -d bin/darwin/amd64/cache
            - artifact push workflow bin/darwin/arm64/cache -d bin/darwin/arm64/cache
            - artifact push workflow bin/windows/cache.exe -d bin/windows/cache.exe
        - name: Build sem-context CLI
          commands:
            - sem-version go 1.22
            - export GOPATH=~/go
            - 'export PATH=/home/semaphore/go/bin:$PATH'
            - checkout
            - cd sem-context
            - make build.linux ARCH=amd64
            - make build.linux ARCH=arm64
            - make build.darwin ARCH=amd64
            - make build.darwin ARCH=arm64
            - make build.windows
            - artifact push workflow bin/linux/amd64/sem-context -d bin/linux/amd64/sem-context
            - artifact push workflow bin/linux/arm64/sem-context -d bin/linux/arm64/sem-context
            - artifact push workflow bin/darwin/amd64/sem-context -d bin/darwin/amd64/sem-context
            - artifact push workflow bin/darwin/arm64/sem-context -d bin/darwin/arm64/sem-context
            - artifact push workflow bin/windows/sem-context.exe -d bin/windows/sem-context.exe
  - name: Static Code Analysis
    dependencies: []
    task:
      prologue:
        commands:
          - sudo apt-get install shellcheck
          - checkout
      jobs:
        - name: Shell check
          commands:
            - shellcheck sem-service
            - shellcheck sem-version
            - shellcheck -s bash libcheckout
            - shellcheck install-package
            - shellcheck sem-semantic-release
        - name: PowerShell check
          commands:
            - make pwsh.lint
  - name: 'PowerShell: tests'
    dependencies: []
    task:
      prologue:
        commands:
          - checkout
      jobs:
        - name: checkout tests
          commands:
            - make pwsh.test
  - name: Sem Version Tests Focal
    dependencies:
      - Build local CLIs
    task:
      agent:
        machine:
          type: f1-standard-2
          os_image: ubuntu2004
      prologue:
        commands:
          - checkout
          - sudo apt-get update
          - sudo apt-get install -y libargon2-0
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: Sem Version
          matrix:
            - env_var: TEST
              values:
                - elixir
                - erlang
                - firefox
                - gcc
                - go
                - java
                - kubectl
                - node
                - php
                - python
                - ruby
                - scala
          commands:
            - 'bats tests/sem_version_focal/${TEST}.bats'
  - name: Sem Version Tests container
    dependencies:
      - Build local CLIs
    task:
      agent:
        machine:
          type: f1-standard-2
          os_image: ubuntu2004
        containers:
          - name: main
            image: 'registry.semaphoreci.com/android:34-flutter'
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source tests/sftp_server/start_on_mac.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: Sem Version Flutter
          commands:
            - bats tests/sem_version_container.bats
  - name: 'Cache CLI: Tests'
    dependencies: []
    task:
      prologue:
        commands:
          - checkout && cd cache-cli
          - make test.setup
      jobs:
        - name: Test
          commands:
            - make test
      epilogue:
        always:
          commands:
            - docker-compose logs s3
            - test-results publish junit-report.xml
  - name: 'Cache CLI: Lint'
    dependencies: []
    task:
      env_vars:
        - name: GO111MODULE
          value: 'on'
      prologue:
        commands:
          - sem-version go 1.22
          - checkout && cd cache-cli
      jobs:
        - name: Lint
          commands:
            - go install github.com/mgechev/revive@latest
            - make lint
  - name: SHM Test Focal
    dependencies:
      - Build local CLIs
    task:
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: SHM Test Focal
          commands:
            - sed -i "s/\/tmp\/system-metrics/\/tmp\/system-metrics2/g" ~/.toolbox/system-metrics-collector
            - . ~/.toolbox/system-metrics-collector &
            - sleep 2
            - bats tests/shm/shm_ubuntu.bats
            - cat /tmp/system-metrics2
  - name: SHM Test Docker
    dependencies:
      - Build local CLIs
    task:
      agent:
        machine:
          type: f1-standard-2
          os_image: ubuntu2004
        containers:
          - name: main
            image: 'registry.semaphoreci.com/ubuntu:20.04'
      prologue:
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - git submodule init && git submodule update
          - sudo ./tests/support/bats-core/install.sh /usr/local
      jobs:
        - name: SHM Test Docker
          commands:
            - sed -i "s/\/tmp\/system-metrics/\/tmp\/system-metrics2/g" ~/.toolbox/system-metrics-collector
            - . ~/.toolbox/system-metrics-collector &
            - sleep 2
            - bats tests/shm/shm_docker.bats
            - cat /tmp/system-metrics2
after_pipeline:
  task:
    jobs:
      - name: Submit Reports
        commands:
          - checkout
          - artifact pull workflow bin/linux/amd64/cache -d cache-cli/bin/linux/amd64/cache
          - artifact pull workflow bin/linux/arm64/cache -d cache-cli/bin/linux/arm64/cache
          - artifact pull workflow bin/darwin/amd64/cache -d cache-cli/bin/darwin/amd64/cache
          - artifact pull workflow bin/darwin/arm64/cache -d cache-cli/bin/darwin/arm64/cache
          - artifact pull workflow bin/linux/amd64/sem-context -d sem-context/bin/linux/amd64/sem-context
          - artifact pull workflow bin/linux/arm64/sem-context -d sem-context/bin/linux/arm64/sem-context
          - artifact pull workflow bin/darwin/amd64/sem-context -d sem-context/bin/darwin/amd64/sem-context
          - artifact pull workflow bin/darwin/arm64/sem-context -d sem-context/bin/darwin/arm64/sem-context
          - bash release/create.sh
          - source release/install_in_tests.sh
          - test-results gen-pipeline-report
promotions:
  - name: Promotion 1
    pipeline_file: pipeline_3.yml
    deployment_target: example
